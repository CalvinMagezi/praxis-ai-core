# .gitchangelog.rc
   import os
   import re

   def read_version_from_file():
       version_file = os.path.join(os.path.dirname(__file__), 'VERSION')
       if os.path.exists(version_file):
           with open(version_file, 'r') as f:
               return f.read().strip()
       return None

   def get_current_version():
       version = read_version_from_file()
       if version:
           return version
       return 'Unreleased'

   ignore_regexps = [
       r'@minor', r'!minor',
       r'@cosmetic', r'!cosmetic',
       r'@refactor', r'!refactor',
       r'@wip', r'!wip',
       r'^Merge pull request ',
       r'^Merge branch ',
       r'^Bumped version',
   ]

   section_regexps = [
       ('Added', [
           r'^[Aa]dd'
       ]),
       ('Changed', [
           r'^[Cc]hang'
       ]),
       ('Fixed', [
           r'^[Ff]ix'
       ]),
       ('Deprecated', [
           r'^[Dd]eprecat'
       ]),
       ('Removed', [
           r'^[Rr]emov'
       ]),
       ('Security', [
           r'^[Ss]ecur'
       ])
   ]

   body_process = ReSub(r'((^|\n)[A-Z]\w+(-\w+)*: .*(\n\s+.*)*)+$', r'') | strip

   subject_process = (strip |
       ReSub(r'^(\w+)(\(([\w\$\.\-\* ]+)\))?:[ \t]*(.*)$', r'\4') |
       ucfirst | final_dot)

   tag_filter_regexp = r'^[0-9]+\.[0-9]+(\.[0-9]+)?$'

   unreleased_version_label = get_current_version()

   output_engine = mustache("markdown")
   include_merge = False